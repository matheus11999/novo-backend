require('dotenv').config();

console.log('üîç Verificando configura√ß√£o de Webhook URL...\n');

// Simular como o paymentController constr√≥i a URL
function buildWebhookUrl(useProduction = false) {
    if (useProduction) {
        // Usar BASE_URL do .env para produ√ß√£o
        const baseUrl = process.env.BASE_URL;
        return `${baseUrl}/api/webhook/mercadopago`;
    } else {
        // Desenvolvimento (localhost)
        return 'http://localhost:3000/api/webhook/mercadopago';
    }
}

const devWebhook = buildWebhookUrl(false);
const prodWebhook = buildWebhookUrl(true);

console.log('üè† Webhook Desenvolvimento:', devWebhook);
console.log('üåê Webhook Produ√ß√£o:', prodWebhook);
console.log('');

if (devWebhook.includes('localhost')) {
    console.log('‚ö†Ô∏è  PROBLEMA IDENTIFICADO:');
    console.log('‚ùå URL localhost n√£o √© acess√≠vel pelo MercadoPago');
    console.log('üí° MercadoPago precisa de URL p√∫blica para enviar notifica√ß√µes');
    console.log('');
    console.log('üîß SOLU√á√ïES:');
    console.log('1. üöÄ Deploy em servidor com dom√≠nio p√∫blico');
    console.log('2. üîó Use ngrok para expor localhost publicamente');
    console.log('3. ‚öôÔ∏è  Configure webhook fixo com BASE_URL');
    console.log('');
    console.log('üìù Para usar BASE_URL do .env:');
    console.log(`   const webhookUrl = '${prodWebhook}';`);
} else {
    console.log('‚úÖ Webhook URL parece estar configurado corretamente');
}

console.log('\nüìä Status Atual:');
console.log(`BASE_URL: ${process.env.BASE_URL || 'N√£o configurado'}`);
console.log(`NODE_ENV: ${process.env.NODE_ENV || 'N√£o configurado'}`);